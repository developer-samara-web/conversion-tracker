// –ò–º–ø–æ—Ä—Ç—ã
const { logs } = require('@utils/logs');
const { setUser, getUser, updateUser } = require('@controllers/userController');
const { getInvite, updateInvite } = require('@controllers/inviteController');

// –†–æ—É—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
const create = async (req, res) => {
	try {
		// –ü–æ–ª—É—á–∞–µ–º id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
		const { clientId } = req.query;

		// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
		const findUser = await getUser(clientId);

		if (findUser) {
			// –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
			if (findUser.invite?.href) {
				// –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –µ—Å—Ç—å –∏–Ω–≤–∞–π—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –µ–≥–æ
				res.status(200).send(findUser.invite.href);
			} else {
				// –ï—Å–ª–∏ –∏–Ω–≤–∞–π—Ç–∞ –Ω–µ—Ç, —Ä–µ–∑–µ—Ä–≤–∏—Ä—É–µ–º –Ω–æ–≤—ã–π
				const { _id, href } = await getInvite({ user_id: null });

				// –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
				await updateUser(findUser._id, { invite: _id, status: 'pending' });

				// –†–µ–∑–µ—Ä–≤–∏—Ä—É–µ–º –∏–Ω–≤–∞–π—Ç –∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
				await updateInvite(_id, findUser._id);

				// –û—Ç–º–µ–Ω—è–µ–º –±—Ä–æ–Ω—å —á–µ—Ä–µ–∑ 2 –º–∏–Ω—É—Ç—ã
				setTimeout(async () => {
					const user = await getUser(clientId);
					await updateInvite(_id, null);
					await updateUser(user._id, { invite: null, status: 'expired' });
					logs(`üü® <b>INFO:</b> ${user._id} –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –≤–æ–≤—Ä–µ–º—è.`);
				}, process.env.TELEGRAM_INVITE_TIME);

				// –û—Ç–¥–∞—ë–º –∏–Ω–≤–∞–π—Ç –≤ –æ—Ç–≤–µ—Ç–µ
				res.status(200).send(href);
			}
		} else {
			// –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç, —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤–æ–≥–æ
			const { _id, href } = await getInvite({ user_id: null });
			// –°–æ–∑–¥–∞—ë–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
			const user = await setUser(clientId, _id);
			// –†–µ–∑–µ—Ä–≤–∏—Ä—É–µ–º –∏–Ω–≤–∞–π—Ç –∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
			await updateInvite(_id, user._id);
			// –û—Ç–º–µ–Ω—è–µ–º –±—Ä–æ–Ω—å —á–µ—Ä–µ–∑ 2 –º–∏–Ω—É—Ç—ã
			setTimeout(async () => {
				const user = await getUser(clientId);
				await updateInvite(_id, null);
				await updateUser(user._id, { invite: null, status: 'expired' });
				logs(`üü® <b>INFO:</b> ${user._id} –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –≤–æ–≤—Ä–µ–º—è.`);
			}, process.env.TELEGRAM_INVITE_TIME);

			// –û—Ç–¥–∞—ë–º –∏–Ω–≤–∞–π—Ç –≤ –æ—Ç–≤–µ—Ç–µ
			res.status(200).json({ data: href });
		}
	} catch (e) {
		res.status(400).send(`–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ.`);
		logs('üü• <b>ERROR:</b> –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ', e);
	}
};

module.exports = { create }