// –ò–º–ø–æ—Ä—Ç—ã
const { logs } = require('@utils/logs');
const { setUser, getUser } = require('@controllers/userController');
const { getInvite, updateInvite} = require('@controllers/inviteController');

// –†–æ—É—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
const create = async (req, res) => {
	try {
		// –ü–æ–ª—É—á–∞–µ–º id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
		const { clientId } = req.query;
		// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ
		const findUser = await getUser(clientId);

		if (!findUser) {
			// –ü–æ–ª—É—á–∞–µ–º —Å–≤–æ–±–æ–¥–Ω—ã–π –∏–Ω–≤–∞–π—Ç
			const { _id, href } = await getInvite({ user_id: null });
			// –°–æ–∑–¥–∞—ë–º –Ω–æ–≤–æ–≥–æ —é–∑–µ—Ä–∞
			const user = await setUser(clientId, _id);
			// –†–µ–∑–µ—Ä–≤–∏—Ä—É–µ–º –∏–Ω–≤–∞—Ç–π –∑–∞ —é–∑–µ—Ä–æ–º
			await updateInvite(_id, user._id);
			// –û—Ç–¥–∞—ë–º –∏–Ω–≤–∞–π—Ç –≤ –æ—Ç–≤–µ—Ç–µ
			res.status(200).send(href);
		} else {
			res.status(200).send(findUser.invite.href);
		}
	} catch (e) {
		res.status(400).send(`–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ.`);
		logs('üü• <b>ERROR:</b> –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ', e);
	}
}

module.exports = { create }