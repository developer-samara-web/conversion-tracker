//–ò–º–ø–æ—Ä—Ç—ã
const { logs } = require('@utils/logs');
const { getUsers } = require('@controllers/userController');

// –ü–æ–ª—É—á–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª-–≤–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π
const getUsersCounter = async () => {
    try {
        // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–∏ÃÜ
        const users = await getUsers({});
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö
        if (!users.length) { return 0 };
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
        return users.length;
    } catch (e) {
        logs('üü• <b>ERROR:[getUsersCounter]</b> –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —á–∏—Å–ª–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', e);
    }
}

// –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª-–≤–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const getUsersCompletedCounter = async () => {
    try {
        // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–∏ÃÜ
        const users = await getUsers({status: 'completed'});
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö
        if (!users.length) { return 0 };
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
        return users.length;
    } catch (e) {
        logs('üü• <b>ERROR:[getUsersCompletedCounter]</b> –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —á–∏—Å–ª–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', e);
    }
}

// –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª-–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Ä–∞–±–æ—Ç–µ
const getUsersWorkingCounter = async () => {
    try {
        // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–∏ÃÜ
        const users = await getUsers({status: 'pending'});
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö
        if (!users.length) { return 0 };
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
        return users.length;
    } catch (e) {
        logs('üü• <b>ERROR:[getUsersWorkingCounter]</b> –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —á–∏—Å–ª–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', e);
    }
}

// –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª-–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏—Å—Ç–µ–∫—à–∏—Ö —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –∏–Ω–≤–∞–π—Ç–∞
const getUsersExpiredCounter = async () => {
    try {
        // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–∏ÃÜ
        const users = await getUsers({status: 'expired'});
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö
        if (!users.length) { return 0 };
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
        return users.length;
    } catch (e) {
        logs('üü• <b>ERROR:[getUsersExpiredCounter]</b> –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —á–∏—Å–ª–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', e);
    }
}

module.exports = {
    getUsersCounter,
    getUsersWorkingCounter,
    getUsersCompletedCounter,
    getUsersExpiredCounter,
}