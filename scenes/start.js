// –ò–º–ø–æ—Ä—Ç—ã
const { logs } = require('@utils/logs');
const { Markup, Scenes: { BaseScene } } = require('telegraf');
const { getInvitesCounter, getInvitesWorking } = require('@middlewars/inviteMiddlewar');
const { getUsersCounter, getUsersWorkingCounter, getUsersCompletedCounter, getUsersExpiredCounter } = require('@middlewars/userMiddlewar');

// –°—Ç–∞—Ä—Ç–æ–≤–∞—è —Å—Ü–µ–Ω–∞
const start = new BaseScene('start');
module.exports = start.enter(async (ctx) => {
    try {
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ–± –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è—Ö
        const all = await getInvitesCounter();
        const in_work = await getInvitesWorking();
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ–± –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö
        const users = await getUsersCounter();
        const working = await getUsersWorkingCounter();
        const completed = await getUsersCompletedCounter();
        const expired = await getUsersExpiredCounter();

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        await ctx.replyWithHTML(`<b>‚ùáÔ∏è  –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è:</b>\n<b>–í —Ä–∞–±–æ—Ç–µ:</b> ${in_work} —à—Ç\n<b>–í—Å–µ–≥–æ:</b> ${all} —à—Ç\n\n<b>‚ùáÔ∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:</b>\n<b>–í—Å–µ–≥–æ:</b> ${users} —à—Ç\n<b>–í —Ä–∞–±–æ—Ç–µ:</b> ${working} —à—Ç\n<b>–¢–∞–π–º–∞—É—Ç:</b> ${expired} —à—Ç\n<b>–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö:</b> ${completed} —à—Ç`, Markup.keyboard([
            ['üîπ –î–æ–±–∞–≤–∏—Ç—å –∏–Ω–≤–∞–π—Ç'],
            ['üîπ –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É']
            // ['üîπ –û–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω'],
        ]).resize().oneTime());
    } catch (e) {
        logs('üü• <b>ERROR:</b> –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫', e);
    }
});