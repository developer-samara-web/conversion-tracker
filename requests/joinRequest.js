// –ò–º–ø–æ—Ä—Ç—ã
const { logs } = require('@utils/logs');
const { findUser, updateUser } = require('@controllers/userController');
const { updateInvite } = require('@controllers/inviteController');
const { conversionRequest } = require('@requests/conversionRequest');

// –ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—Ö–æ–¥ –≤ —á–∞—Ç
const joinRequest = async (ctx) => {
	try {
		// –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –∏–Ω–≤–∞–π—Ç–∞
		const { invite_link } = ctx.chatJoinRequest.invite_link;
		// –ü–æ–∏—Å–∫ —é–∑–µ—Ä–∞ —Å –Ω—É–∂–Ω—ã–º –∏–Ω–≤–∞—Ç–æ–º
		const user = await findUser(invite_link);

		if (user) {
			// –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —é–∑–µ—Ä–∞
			const updatedUser = await updateUser(user._id, { status: 'completed', invite: null });
			// –ß–∏—Å—Ç–∏–º –∏–Ω–≤–∞–π—Ç –æ—Ç —é–∑–µ—Ä–∞
			const clearedInvite = await updateInvite(user.invite._id, null);
			// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –º–µ—Ç—Ä–∏–∫—É
			const metrikaLead = await conversionRequest(user.client_id);
			// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–≥
			logs(`<b>${metrikaLead ? 'üü© OK:' : 'üü• ERROR:'} ${ctx.from.first_name} (${user._id})</b> –æ—Ç–ø—Ä–∞–≤–∏–ª –∑–∞—è–≤–∫—É`);
		} else {
			logs(`üü® <b>INFO:</b> ${ctx.from.first_name} –æ—Ç–ø—Ä–∞–≤–∏–ª –∑–∞—è–≤–∫—É –±–µ–∑ —Å–∫—Ä–∏–ø—Ç–∞`);
		}
	} catch (e) {
		logs('üü• <b>ERROR:</b> –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', e);
	}
}

module.exports = { joinRequest }