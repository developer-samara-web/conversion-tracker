// –ò–º–ø–æ—Ä—Ç—ã
const { logs } = require('@utils/logs');
const { findUser, updateUser } = require('@controllers/userController');
const { updateInvite } = require('@controllers/inviteController');
const { metrikaRequest } = require('@requests/metrikaRequest');
const { tiktokRequest } = require('@requests/tiktokRequest');

// –ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—Ö–æ–¥ –≤ —á–∞—Ç
const joinRequest = async (ctx) => {
	try {
		// –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –∏–Ω–≤–∞–π—Ç–∞
		const { invite_link } = ctx.chatJoinRequest?.invite_link;
		// –ü–æ–∏—Å–∫ —é–∑–µ—Ä–∞ —Å –Ω—É–∂–Ω—ã–º –∏–Ω–≤–∞—Ç–æ–º
		const { _id, invite, client_id, client_type } = await findUser(invite_link);

		if (client_type === 'yandex') {
			// –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —é–∑–µ—Ä–∞
			await updateUser(_id, { status: 'completed', invite: null });
			// –ß–∏—Å—Ç–∏–º –∏–Ω–≤–∞–π—Ç –æ—Ç —é–∑–µ—Ä–∞
			await updateInvite(invite._id, null);
			// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –º–µ—Ç—Ä–∏–∫—É
			const metrikaLead = await metrikaRequest(client_id);
			// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–≥
			logs(`<b>${metrikaLead ? 'üü© OK:' : 'üü• ERROR:'}[joinRequest][${client_id}]</b> –æ—Ç–ø—Ä–∞–≤–∏–ª –∑–∞—è–≤–∫—É –≤ –º–µ—Ç—Ä–∏–∫—É`);

			return;
		}

		if (client_type === 'tiktok') {
			// –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —é–∑–µ—Ä–∞
			await updateUser(_id, { status: 'completed', invite: null });
			// –ß–∏—Å—Ç–∏–º –∏–Ω–≤–∞–π—Ç –æ—Ç —é–∑–µ—Ä–∞
			await updateInvite(invite._id, null);
			// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –º–µ—Ç—Ä–∏–∫—É
			const tiktokLead = await tiktokRequest(client_id);
			// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–≥
			logs(`<b>${tiktokLead ? 'üü© OK:' : 'üü• ERROR:'}[joinRequest] [${client_type}] [${client_id}]</b> –æ—Ç–ø—Ä–∞–≤–∏–ª –∑–∞—è–≤–∫—É –≤ —Ç–∏–∫—Ç–æ–∫`);

			return;
		}

		logs(`<b>üü® INFO:[joinRequest]</b> ${ctx.from.first_name} –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –±–µ–∑ —Å–∫—Ä–∏–ø—Ç–∞`);
		return
	} catch (e) {
		logs('üü• <b>ERROR:[joinRequest]</b> –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', e);
		return
	}
}

module.exports = { joinRequest }